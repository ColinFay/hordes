library(hordesx)
devtools::document()
library(hordesx)
1:'3'
devtools::document()
devtools::document()
library(hordesx)
gggpoint(1)
ggpoint(1)
library(hordesx)
ggpoint(1)
library(hordesx)
gg <- ggplot(iris[1:n, ], aes(Sepal.Length, Sepal.Width)) +
geom_point()
library(hordesx)
library(shiny)
library(shiny)
ui <- function(request){
tagList(
selectInput("a", "a", choices = letters, selected = NULL)
)
}
server <- function(
input,
output,
session
){
}
shinyApp(ui, server)
library(shiny)
ui <- function(request){
tagList(
selectInput("a", "a", choices = c("", letters), selected = NULL),
selectInput("b", "b", choices = c("", letters), selected = NULL),
selectInput("b", "b", choices = c("", letters), selected = NULL),
verbatimTextOutput("out")
)
}
server <- function(
input,
output,
session
){
}
shinyApp(ui, server)
library(shiny)
ui <- function(request){
tagList(
selectInput("a", "a", choices = c("", letters), selected = NULL),
selectInput("b", "b", choices = c("", letters), selected = NULL),
selectInput("c", "c", choices = c("", letters), selected = NULL),
verbatimTextOutput("out")
)
}
server <- function(
input,
output,
session
){
output$out <- renderPrint({
validate(
need(
c(input$a, input$b, input$c),
"Please select inputs"
)
)
})
}
shinyApp(ui, server)
all(NULL)
all(NULL, "")
library(shiny)
ui <- function(request){
tagList(
selectInput("a", "a", choices = c("", letters), selected = NULL),
selectInput("b", "b", choices = c("", letters), selected = NULL),
selectInput("c", "c", choices = c("", letters), selected = NULL),
verbatimTextOutput("out")
)
}
server <- function(
input,
output,
session
){
output$out <- renderPrint({
validate(
need(
all(input$a, input$b, input$c),
"Please select inputs"
)
)
})
}
shinyApp(ui, server)
library(shiny)
ui <- function(request){
tagList(
selectInput("a", "a", choices = c("", letters), selected = NULL),
selectInput("b", "b", choices = c("", letters), selected = NULL),
selectInput("c", "c", choices = c("", letters), selected = NULL),
verbatimTextOutput("out")
)
}
server <- function(
input,
output,
session
){
output$out <- renderPrint({
validate(
need(
c(input$a, input$b, input$c),
"Please select inputs"
)
)
})
}
shinyApp(ui, server)
c(NULL, NULL, NULL)
stringr::str_detect("input$password", "[:punct:]")
stringr::str_detect("!", "[:punct:]")
stringr::str_detect("input$password", "[A-z]")
